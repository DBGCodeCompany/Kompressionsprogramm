unit kompressiontestunit;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, Forms, Controls, Graphics, Dialogs, StdCtrls;

type
  TArrayofByte= array of byte;
  TArrayofInt= array of integer;
  TArrayofBoolean= array of boolean;

  { TForm1 }

  TForm1 = class(TForm)
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Edit1: TEdit;
    Edit2: TEdit;
    Memo1: TMemo;
    OpenDialog1: TOpenDialog;
    SaveDialog1: TSaveDialog;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private

  public

  end;

var
  Form1: TForm1;
  Werterandom:Array of byte;
  WerteKomprimiert: Array of integer;
  wert1:byte;
  wert2:byte;
  startwert:byte;
  i,n,z,y:integer;
   startwertbool:boolean;
  wert1bool:boolean;
  wert2bool:boolean;

implementation

{$R *.lfm}

{ TForm1 }

function rleencode(Werte:TArrayofbyte):TArrayofInt;
begin
   startwert:=(Werte[0]);   //für späteres zurückrechnen merken

   n:=1; //? 01...falls 0?
   z:=0;

  setLength(WerteKomprimiert,1);
  WerteKomprimiert[0]:=1;

  //angelehnt an https://rosettacode.org/wiki/Run-length_encoding#Pascal
     for i:=0 to (Length(werte)-2) do begin
         wert1:=(werte[i]);       //werte miteinander vergleichen,ob wechsel (01) vorliegt
         wert2:=(werte[i+1]);
        if wert1=wert2 then
          inc(WerteKomprimiert[z],1)
        else begin
          inc(z,1);
          setLength(WerteKomprimiert,Length(WerteKomprimiert)+1);
          WerteKomprimiert[z] := 1;
        end;
        end;
   result:=copy(WerteKomprimiert);
end;


procedure TForm1.Button1Click(Sender: TObject);
begin
 setLength(Werterandom,(strtoint(Edit1.text)-1));
  for i:=0 to (strtoint(Edit1.text)-1) do begin
    Werterandom[i]:=random(2);
    Memo1.lines[i]:=inttostr(Werterandom[i])
  end; }

//binstr(ord())

end;

procedure TForm1.Button2Click(Sender: TObject);
begin

  startwert:=strtoint(Memo1.lines[0]);   //für späteres zurückrechnen merken

   n:=1;
   z:=0;

  setLength(WerteKomprimiert,1);
  WerteKomprimiert[0]:=1;

  //angelehnt an https://rosettacode.org/wiki/Run-length_encoding#Pascal
     for i:=0 to (Memo1.lines.count-2) do begin
         wert1:=strtoint(Memo1.lines[i]);       //werte miteinander vergleichen,ob wechsel (01) vorliegt
         wert2:=strtoint(Memo1.lines[i+1]);
        if wert1=wert2 then
          inc(WerteKomprimiert[z],1)
        else begin
          inc(z,1);
          setLength(WerteKomprimiert,Length(WerteKomprimiert)+1);
          WerteKomprimiert[z] := 1;
        end;
        end;

  Memo1.lines.clear;

  for y:=0 to (Length(WerteKomprimiert)-1) do begin
    Memo1.lines[y]:=inttostr(WerteKomprimiert[y]);
  end;

  edit2.text:=inttostr(Length(WerteKomprimiert));

end;

procedure TForm1.Button3Click(Sender: TObject);
var test: array of integer;
  test2: array of byte;
  test3: array of boolean;
begin
  //string im memo erst in ascii, dann in binär?

  setLength(test2,memo1.lines.count);
  for i:=0 to memo.lines.count do begin
    test2[i]:=strtoint(Memo1.lines[0]);
  end;
  test:=rleencode(test2);


end;

procedure TForm1.FormCreate(Sender: TObject);

begin
  Randomize;
end;



end.

